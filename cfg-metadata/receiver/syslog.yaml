type: '*syslogreceiver.SysLogConfig'
doc: |
  SysLogConfig defines configuration for the syslog receiver
fields:
- name: attributes
  type: map[string]helper.ExprStringConfig
  kind: map
- name: resource
  type: map[string]helper.ExprStringConfig
  kind: map
- name: id
  kind: string
  default: syslog_input
- name: type
  kind: string
  default: syslog_input
- name: output
  type: '[]string'
  kind: slice
- name: protocol
  kind: string
  default: ""
- name: location
  kind: string
  default: ""
- name: enable_octet_counting
  kind: bool
  default: false
- name: non_transparent_framing_trailer
  type: '*string'
  kind: ptr
- name: tcp
  type: '*tcp.BaseConfig'
  kind: ptr
  doc: |
    BaseConfig is the detailed configuration of a tcp input operator.
  fields:
  - name: max_log_size
    type: helper.ByteSize
    kind: int64
  - name: listen_address
    kind: string
    default: ""
  - name: tls
    type: '*configtls.TLSServerSetting'
    kind: ptr
    doc: |
      TLSServerSetting contains TLS configurations that are specific to server
      connections in addition to the common configurations. This should be used by
      components configuring TLS server connections.
    fields:
    - name: ca_file
      kind: string
      default: ""
      doc: |
        Path to the CA cert. For a client this verifies the server certificate.
        For a server this verifies client certificates. If empty uses system root CA.
        (optional)
    - name: cert_file
      kind: string
      default: ""
      doc: |
        Path to the TLS cert to use for TLS required connections. (optional)
    - name: key_file
      kind: string
      default: ""
      doc: |
        Path to the TLS key to use for TLS required connections. (optional)
    - name: min_version
      kind: string
      default: ""
      doc: |
        MinVersion sets the minimum TLS version that is acceptable.
        If not set, TLS 1.2 will be used. (optional)
    - name: max_version
      kind: string
      default: ""
      doc: |
        MaxVersion sets the maximum TLS version that is acceptable.
        If not set, refer to crypto/tls for defaults. (optional)
    - name: reload_interval
      type: time.Duration
      kind: int64
      doc: |
        ReloadInterval specifies the duration after which the certificate will be reloaded
        If not set, it will never be reloaded (optional)
    - name: client_ca_file
      kind: string
      default: ""
      doc: |
        Path to the TLS cert to use by the server to verify a client certificate. (optional)
        This sets the ClientCAs and ClientAuth to RequireAndVerifyClientCert in the TLSConfig. Please refer to
        https://godoc.org/crypto/tls#Config for more information. (optional)
    - name: client_ca_file_reload
      kind: bool
      default: false
      doc: |
        Reload the ClientCAs file when it is modified
        (optional, default false)
  - name: add_attributes
    kind: bool
    default: false
  - name: encoding
    kind: string
    default: ""
  - name: multiline
    type: helper.MultilineConfig
    kind: struct
    doc: |
      MultilineConfig is the configuration of a multiline helper
    fields:
    - name: line_start_pattern
      kind: string
      default: ""
    - name: line_end_pattern
      kind: string
      default: ""
  - name: preserve_leading_whitespaces
    kind: bool
    default: false
  - name: preserve_trailing_whitespaces
    kind: bool
    default: false
- name: udp
  type: '*udp.BaseConfig'
  kind: ptr
  doc: |
    BaseConfig is the details configuration of a udp input operator.
  fields:
  - name: listen_address
    kind: string
    default: ""
  - name: add_attributes
    kind: bool
    default: false
  - name: encoding
    kind: string
    default: ""
  - name: multiline
    type: helper.MultilineConfig
    kind: struct
    doc: |
      MultilineConfig is the configuration of a multiline helper
    fields:
    - name: line_start_pattern
      kind: string
      default: ""
    - name: line_end_pattern
      kind: string
      default: ""
  - name: preserve_leading_whitespaces
    kind: bool
    default: false
  - name: preserve_trailing_whitespaces
    kind: bool
    default: false
- name: operators
  type: '[]operator.Config'
  kind: slice
  doc: |
    Config is the configuration of an operator
  fields:
  - name: builder
    type: operator.Builder
    kind: interface
- name: storage
  type: '*component.ID'
  kind: ptr
- name: retry_on_failure
  type: consumerretry.Config
  kind: struct
  doc: |
    Config defines configuration for retrying batches in case of receiving a retryable error from a downstream
    consumer. If the retryable error doesn't provide a delay, exponential backoff is applied.
  fields:
  - name: enabled
    kind: bool
    default: false
    doc: |
      Enabled indicates whether to not retry sending logs in case of receiving a retryable error from a downstream
      consumer. Default is false.
  - name: initial_interval
    type: time.Duration
    kind: int64
    default: 1s
    doc: |
      InitialInterval the time to wait after the first failure before retrying. Default value is 1 second.
  - name: max_interval
    type: time.Duration
    kind: int64
    default: 30s
    doc: |
      MaxInterval is the upper bound on backoff interval. Once this value is reached the delay between
      consecutive retries will always be `MaxInterval`. Default value is 30 seconds.
  - name: max_elapsed_time
    type: time.Duration
    kind: int64
    default: 5m0s
    doc: |
      MaxElapsedTime is the maximum amount of time (including retries) spent trying to send a logs batch to
      a downstream consumer. Once this value is reached, the data is discarded. It never stops if MaxElapsedTime == 0.
      Default value is 5 minutes.
